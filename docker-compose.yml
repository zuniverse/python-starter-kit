version: '3.9'

services:

  backend:
    build:
      context: .
      dockerfile: ./docker/Dockerfile
    container_name: backend
    hostname: backend
    command: tail -f /dev/null
    # command: celery -A worker_init_2 worker -l info
    stdin_open: true
    tty: true
    # entrypoint: /workspace/entrypoint.sh start-worker
    # ports:
    #   - "8000:8000"
    volumes:
      - type: bind
        source: ./src/
        target: /workspace/src/
      - type: bind
        source: ./tests/
        target: /workspace/tests/
    depends_on:
      - rabbitmq3
    restart: on-failure

  rabbitmq3:
    image: rabbitmq:3.9.7-management-alpine
    container_name: rabbitmq
    hostname: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER-guest}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS-guest}
    ports:
      - ${AMPQ_PORT-5672}:5672
      - ${RABBITMQ_MNGMNT_PORT-15672}:15672
    restart: on-failure

  postgres:
    image: postgres:12.8-bullseye
    container_name: postgres
    hostname: postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT-5432}:5432"
    restart: on-failure
    volumes:
      - ${POSTGRES_DATA_VOL-data_postgresql}:/var/lib/postgresql/data

  # redis:
  #   image: redis:6.2.6-alpine
  #   container_name: redis
  #   hostname: redis
  #   environment:
  #     - REDIS_REPLICATION_MODE=master
  #   command: redis-server --requirepass sOmE_sEcUrE_pAsS
  #   ports:
  #     - "${REDIS_PORT-6379}:6379"
  #   volumes:
  #     - ${REDIS_DATA_DIR-./data/.redis-data}:/var/lib/redis
  #     - ${REDIS_CONF_DIR-./data/.redis-conf}:/usr/local/etc/redis/redis.conf
  #   restart: on-failure

volumes:
  data_postgresql:
      